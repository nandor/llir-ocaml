################################################################################
#                                                                              #
#                                  OCaml                                       #
#                                                                              #
#                  Nandor Licker, University of Cambridge                      #
#                                                                              #
#    Copyright 2018--     Nandor Licker                                        #
#                                                                              #
#    All rights reserved.  This file is distributed under the terms of         #
#    the GNU Lesser General Public License version 2.1, with the               #
#    special exception on linking described in the file LICENSE.               #
#                                                                              #
################################################################################


################################################################################
# caml_alloc1
################################################################################
  .text
  .globl _caml_alloc1
_caml_alloc1:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_alloc2
################################################################################
  .text
  .globl _caml_alloc2
_caml_alloc2:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_alloc3
################################################################################
  .text
  .globl _caml_alloc3
_caml_alloc3:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_allocN
################################################################################
  .text
  .globl _caml_allocN
_caml_allocN:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_c_call
################################################################################
  .text
  .globl _caml_c_call
_caml_c_call:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_call_gc
################################################################################
  .text
  .globl _caml_call_gc
_caml_call_gc:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_ml_array_bound_error
################################################################################
  .text
  .globl _caml_ml_array_bound_error
_caml_ml_array_bound_error:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_raise_exn
################################################################################
  .text
  .globl _caml_raise_exn
_caml_raise_exn:
  mov.i64 $0, 0
  ret $0

  .data
  .globl _caml_exn_val
_caml_exn_val:
  .quad 0

################################################################################
# caml_callback2_exn
################################################################################
  .text
  .globl _caml_callback2_exn
_caml_callback2_exn:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_callback3_exn
################################################################################
  .text
  .globl _caml_callback3_exn
_caml_callback3_exn:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_callback_exn
################################################################################
  .text
  .globl _caml_callback_exn
_caml_callback_exn:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_stack_overflow
################################################################################
  .text
  .globl _caml_raise_exception
_caml_raise_exception:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_start_program
################################################################################
  .text
  .globl _caml_start_program
_caml_start_program:
.L107:
  mov.i64 $0, 0
  ret $0

################################################################################
# caml_stack_overflow
################################################################################
  .text
  .globl _caml_stack_overflow
_caml_stack_overflow:
  mov.i64 $0, 0
  ret $0


################################################################################
  .data
  .globl  _caml_system__frametable
  .align  8
_caml_system__frametable:
  .quad   1           # one descriptor */
  .quad   .L107       # return address into callback */
  .quad   -1          # negative frame size => use callback link */
  .quad   0           # no roots here */
  .align  8
  .quad   16
  .quad   0
  .ascii "amd64.S"
